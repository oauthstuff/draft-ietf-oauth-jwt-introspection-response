<?xml version="1.0" encoding="UTF-8"?>
<!--
		This template is for creating an Internet Draft using xml2rfc, which
		is available here: http://xml.resource.org.
	-->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY I-D.narten-iana-considerations-rfc2434bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.narten-iana-considerations-rfc2434bis.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!--
		For a complete list and description of processing instructions (PIs),
		please see http://xml.resource.org/authoring/README.html.
	-->
<!--
		Below are generally applicable Processing Instructions (PIs) that most
		I-Ds might want to use. (Here they are set differently than their
		defaults in xml2rfc v1.32)
	-->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!--
		control vertical white space (using these PIs as follows is
		recommended by the RFC Editor)
	-->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-ietf-oauth-jwt-introspection-response-07"
     ipr="trust200902">
  <!--
		category values: std, bcp, info, exp, and historic ipr values:
		full3667, noModification3667, noDerivatives3667 you can add the
		attributes updates="NNNN" and obsoletes="NNNN" they will automatically
		be output with "(if approved)"
	-->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!--
			The abbreviated title is used in the page header - it is only
			necessary if the full title is longer than 39 characters
		-->

    <title abbrev="JWT Response">JWT Response for OAuth Token Introspection</title>

    <author fullname="Torsten Lodderstedt" initials="T." role="editor"
            surname="Lodderstedt">
      <organization>yes.com AG</organization>

      <address>
        <email>torsten@lodderstedt.net</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
      </author>
          
    <author fullname="Vladimir Dzhuvinov" initials="V." 
            surname="Dzhuvinov">
      <organization>Connect2id Ltd.</organization>

      <address>
        <email>vladimir@connect2id.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <date day="29" month="Aug" year="2019" />

    <!-- Meta-data Declarations -->

    <area>Security Area</area>

    <workgroup>Open Authentication Protocol</workgroup>

    <!--
			WG name at the upperleft corner of the doc, IETF is fine for
			individual submissions. If this element is not present, the default
			is "Network Working Group", which is used by the RFC Editor as a nod
			to the history of the IETF.
		-->

    <keyword>token introspection</keyword>
    
    <keyword>JWT</keyword>

    <keyword>oauth2</keyword>

    <!--
			Keywords will be incorporated into HTML output files in a meta tag
			but they have no effect on text or nroff output. If you submit your
			draft to the RFC Editor, the keywords will be used for the search
			engine.
		-->

    <abstract>
      <t>This specification proposes an additional JSON Web Token (JWT) secured response
      for OAuth 2.0 Token Introspection.</t>
    </abstract>
  </front>

  <middle>
    <section anchor="Introduction" title="Introduction">
      <t><xref target="RFC7662">OAuth 2.0 Token Introspection</xref> specifies a 
      method for a protected resource to query an OAuth 2.0 authorization server 
      to determine the state of an access token and obtain data associated with
      the access token. This enables deployments to implement identifier-based access
      tokens in an interoperable way.</t>
      <t>The introspection response, as specified in <xref target="RFC7662">OAuth
      2.0 Token Introspection</xref>, is a plain JSON object.
      However, there are use cases where the resource server requires stronger
      assurance that the authorization server issued the token introspection 
      response for an access token, including cases where the authorization server 
      assumes liability for the content of the token introspection response. 
      An example is a resource server using verified person data to create certificates, 
      which in turn are used to create qualified electronic signatures.</t>
      <t>In such use cases it may be useful or even required to return a
      signed JWT as the introspection response. This specification extends the
      token introspection endpoint with the capability to return responses as
      JWTs.</t>
      </section>
      
       <section anchor="RNC" title="Requirements Notation and Conventions">
<t>
  The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
  "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL"
  in this document are to be interpreted as described in
  BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
  when, and only when, they appear in all capitals, as shown here.
</t>
    </section>
    
    <section anchor="as-rs-relationshio" title="Resource server management">
    <t>The authorization server and the resource server maintain a strong two-way trust relationship.
    The resource server relies on the authorization server to obtain authorization,
    user and other data as input to its access control decisions and service delivery.
    The authorization server relies on the resource server to handle the provided data
    appropriately.</t> 
    <t>In the context of this specification, the Token Introspection Endpoint is used to convey
    such security data and potentially also privacy sensitive data related to an access
    token.</t>
    <t>In order to process the introspection requests in a secure and
    privacy-preserving manner, the authorization server MUST be able to identify, 
    authenticate and authorize resource servers.</t>
    <t>To support encrypted token introspection response JWTs,
    the authorization server MUST also be provided with the respective
    resource server encryption keys and algorithms.</t>
    <t>The authorization server MUST be able to determine whether an RS is the
    audience for a particular access token and what data it is entitled to receive,
    otherwise the RS is not authorized to obtain data for the access token.
    The AS has the discretion how to fulfil this requirement. The AS could, for example,
    maintain a mapping between scopes values and resource servers.</t>
    <t>The requirements given above imply that the authorization server
    maintains credentials and other configuration data for each RS.</t>
    <t>One way is by utilizing dynamic client registration <xref target="RFC7591"/>
    and treating every RS as an OAuth client. In this case, the authorization server
    is assumed to at least maintain "client_id" and "token_endpoint_auth_method"
    with complementary authentication method metadata, such as "jwks" or "client_secret".
    In cases where the AS needs to acquire consent to transmit data to a RS, the following
    client metadata fields are recommended: "client_name", "client_uri", "contacts",
    "tos_uri", "policy_uri".</t>
    <t>The AS MUST restrict the use of client credentials by a RS to the calls
    it requires, e.g. the AS MAY restrict such a client to call
    the token introspection endpoint only. How the AS implements this restriction
    is beyond the scope of this specification.</t>
    <t>This specification further introduces client metadata to manage the
    configuration options required to encrypt token introspection response JWTs.</t>
    </section>

	<section anchor="jwt_request" title="Requesting a JWT Response">
    
	<t>A resource server requests to receive a JWT introspection response by
        including an Accept header with content type "application/jwt" in the
        introspection request.</t>
        
    <t>Authentication at the token introspection endpoint can utilize client authentication
    methods or a separate access tokens issued to the resource server. Whether a resource
    server is required to authenticate is determined by the respective RS-specific
    policy at the AS.</t>

      <t>The following is a non-normative example request using 
      client authentication:</t>
	  <t>
	  	<figure>
          <artwork><![CDATA[POST /introspect HTTP/1.1
Host: server.example.com
Accept: application/jwt
Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW
Content-Type: application/x-www-form-urlencoded

token=2YotnFZFEjr1zCsicMWpAA]]></artwork>
        </figure>
	  </t>
	  
	  <t>If required by its policy, the authorization server MUST authenticate the 
	  caller and check its authorization to use the token introspection 
	  endpoint.</t>

	</section>
	
    <section anchor="jwt_response" title="JWT Response">
    
      <t>The introspection endpoint responds with a JWT, setting the
          "Content-Type" header to "application/jwt". This JWT is a cryptographically 
          protected representation of the token introspection response as specified in
          <xref target="RFC7662"/>.</t>
          
     <t>Note: Although the JWT format is widely used as an access token format, the JWT
     returned in the introspection response is not an alternative representation of 
     the introspected access token and is not intended to be used as an access token.</t>
     
     <t>JWT metadata values, such as <spanx style="verb">iat</spanx>, might differ between 
     the token introspection response in JWT format and the introspected access 
     token (see below).</t>
     
     <t>This specification registers the "application/token-introspection+jwt" media type, 
     which is used as value of the <spanx style="verb">typ</spanx> header parameter of the 
     JWT to indicate that the payload is an introspection response.</t>
      
      <t>If the access token is invalid, expired, has been revoked, or is 
      not intended to be consumed by the calling resource server (audience), the 
      authorization server MUST set the value of the response 
      claim <spanx style="verb">active</spanx> to <spanx style="verb">false</spanx>. 
      Otherwise, this claim is set to <spanx style="verb">true</spanx>.</t>
          
      <t>If the access token is considered active, it MUST contain the claims 
	  <spanx style="verb">iss</spanx> and <spanx style="verb">aud</spanx> in order to 
	  prevent misuse of the JWT as an ID or access token
	  (see <xref target="Cross-JWT_Confusion"/>).</t>
	  
	  <t>The <spanx style="verb">iss</spanx> MUST 
	  be set to the issuer URL of the AS.</t> 
	  
	  <t>The value of the <spanx style="verb">aud</spanx> claims MUST identify 
	  the resource server receiving the token introspection response.</t>
	  
	  <t>If the AS adds the following claims to the token introspection response
	  their meaning is defined as follows:
	  <list hangIndent="8" style="hanging">
      	  <t hangText="iat">The <spanx style="verb">iat</spanx> claim indicates when the
      	  introspection response was issued by the AS.</t>
          <t hangText="exp">The <spanx style="verb">exp</spanx> claim indicates when the 
          access token passed in the introspection request will expire.</t>
          <t hangText="jti">The <spanx style="verb">jti</spanx> claim is a unique identifier
          for the access token passed in the introspection request. This identifier
          MUST be stable for all introspection calls for a given access token.</t>
        </list>
	  </t>
	  
	  <t>Further content of the introspection response is determined by the
      RS-specific policy at the AS.</t>
      
      <t>If possible, the AS MUST narrow down the <spanx style="verb">scope</spanx> 
      value to the scopes relevant to the particular RS.</t>
      
      <t>The JWT formatted introspection response MAY contain further claims, 
      especially the claims defined in the "OAuth Token Introspection Response" registry 
      established by <xref target="RFC7662"/> and the "JSON Web Token Claims" registry
      established by <xref target="RFC7519"/>.</t>
      
      <t>This includes claims from the "JSON Web Token Claims" registry that are commonly used
      in <xref target="OpenID.Core"/> and can be applied to the resource owner. These claims
      can serve to identify the resource owner as a natural person or to provide a required
      contact detail, such as an e-Mail address or phone number. When transmitting such claims
      the AS acts as an identity provider in regard to the RS.</t>
      
      <t>The AS determines based on the RS-specific policy what claims about the resource
      owner to return in the introspection response. The AS MUST ensure
      that the release of any privacy-sensitive data is legally based.</t>
      
      <t>The following is a non-normative example response 
      (with line breaks for display purposes only):</t>
	  <t>
	  	<figure>
          <artwork><![CDATA[HTTP/1.1 200 OK
Content-Type: application/jwt

eyJ0eXAiOiJ0b2tlbi1pbnRyb3NwZWN0aW9uK2p3dCIsImFsZyI6IlJTMjU2In0.eyJ
pc3MiOiJodHRwczovL3NlcnZlci5leGFtcGxlLmNvbS8iLCJhdWQiOiJzNkJoZFJrcX
QzIiwianRpIjoidDFGb0NDYVpkNFh2NE9SSlVXVlVlVFpmc0toVzMwQ1FDcldERGp3W
Hk2dyIsImFjdGl2ZSI6dHJ1ZSwic2NvcGUiOiJyZWFkIHdyaXRlIGRvbHBoaW4iLCJl
eHAiOjE1MTQ3OTc5NDIwMDAsImlhdCI6MTUxNDc5NzgyMjAwMCwiY2xpZW50X2lkIjo
iczZCaGRSa3F0MyIsInN1YiI6Ilo1TzN1cFBDODhRckFqeDAwZGlzIiwiZ2l2ZW5fbm
FtZSI6IkpvaG4iLCJmYW1pbHlfbmFtZSI6IkRvZSIsImJpcnRoZGF0ZSI6IjE5ODItM
DItMDEifQ.mnGNVJJwMaMR-drVHIyjOd7S5mScHT5tYC_sLdeaS9C4pkmiOgwHNGah9
w_15kbotjDckotJNHpNTQCcE5nRC29L_jz5hSCNTMmK62fJdEcq0QVuCL_roeHzc-s1
bjU2V2Qme6_2468zqcuhf1fhcieWxx9bDwFFwk3su0qdoF9RBa0HobWzy1ENU6MjiKH
vmrnd5PkJenn1rJEt0EQTUuVE0vh2tQGhxbaZkQ34mLLgES5TCuBK7ALDXhT4aGCzxg
3jLprs_jYTjCq2kugptseKaxsvti0TxOxmxLPcuy5xRxHDUzV2h9_VWVJRgM8y0vhLN
v9XKDe4EQqaIFLA_YD4TBeyPV7Sm4xMQ-2OsSmAz0E2BY_b_s0WrFN2K8tspQhj2mnG
v7Zz8O3zeE2gC59JR56aU_SNspGPbt8GvTwuL5ZZTCmiWKUzQ0ev4zVthUczQmK53dx
Zl6ZxBfIRPV5k1GTPyEPbWehizbJT4JBSLlk-l8JvJcfL2USLtJgMLH1D01fww0IqN1
ofHeHFUmZWB_LR7kGaJ8Kx_a9z4CaaVesW8jzgSmwA8K_pv9yJqqjnUhsh51c49OAgn
cqwAahGrUhrN0dIBrd6sRXU3AiRpaah0MMNcjR2UJbEZKwnMyHTkBQAeZAe9vO9pKV8
JOd0ziYBpAbEpYGE4p3wog4]]></artwork>
        </figure>	
        </t>
        <t>
        The example response header contains the following JSON document:
        </t>
        <t>
        <figure>
          <artwork><![CDATA[{
  "typ": "token-introspection+jwt",
  "alg": "RS256"
}]]></artwork>
        </figure>
        </t>
        <t>
        The example response payload contains the following JSON document:
        </t>
        <t>
        <figure>
          <artwork><![CDATA[{  
   "iss":"https://server.example.com/",
   "aud":"s6BhdRkqt3",
   "jti": "t1FoCCaZd4Xv4ORJUWVUeTZfsKhW30CQCrWDDjwXy6w",
   "active":true,
   "scope":"read write dolphin",
   "exp":1514797942000,
   "iat":1514797822000,
   "client_id":"s6BhdRkqt3",
   "sub":"Z5O3upPC88QrAjx00dis",
   "given_name":"John",
   "family_name":"Doe",
   "birthdate":"1982-02-01"
}]]></artwork>
        </figure>

	  </t>  
	  <t>Depending on the specific resource server policy the JWT is either
      signed, or signed and encrypted. If the JWT is signed and encrypted it
      MUST be a Nested JWT, as defined in <xref target="RFC7519">JWT</xref>.</t>
	  <t>Note: If the resource server policy requires a signed and encrypted
      response and the authorization server receives an unauthenticated request
	  containing an Accept header with content type other than "application/jwt", it MUST
      refuse to serve the request and return an HTTP status code 400. This is
      done to prevent downgrading attacks to obtain token data intended for
      release to legitimate recipients only 
      (see <xref target="token_data_leakage"/>).</t>
    </section>
    
    <section anchor="client_metadata" title="Client Metadata">
      <t>The authorization server determines what algorithm to employ to
      secure the JWT for a particular introspection response. This decision can
      be based on registered metadata parameters for the resource server,
      supplied via dynamic client registration with the resource server posing
      as the client, as specified here.</t>
      <t>The parameter names follow the pattern established by
      <xref target="OpenID.Registration">OpenID Connect
      Dynamic Client Registration</xref> for configuring signing and encryption
      algorithms for JWT responses at the UserInfo endpoint.</t>
      <t>The following client metadata parameters are introduced by this
      specification:
		<list hangIndent="8" style="hanging">
      	  <t hangText="introspection_signed_response_alg">OPTIONAL. 
      	  <xref target="RFC7515">JWS</xref> 
      	  algorithm (<spanx style="verb">alg</spanx> value) as defined in 
      	  <xref target="RFC7518">JWA</xref> for signing introspection responses. If
      	  this is specified, the response will be signed using JWS and the 
      	  configured algorithm. The default, if omitted, is <spanx style="verb">RS256</spanx>.</t>
          <t hangText="introspection_encrypted_response_alg">OPTIONAL.
          <xref target="RFC7516">JWE</xref> algorithm (<spanx style="verb">alg</spanx> value) 
          as defined in <xref target="RFC7518">JWA</xref> for encrypting introspection responses.
          
          If this is specified, the response will be encrypted using JWE and the 
          configured algorithm. The default, if
           omitted, is that no encryption is performed.
          
          If both signing and 
          encryption are requested, the response will be 
          signed then encrypted, with the result being a Nested JWT, as defined in 
          <xref target="RFC7519">JWT</xref>.</t>
          <t hangText="introspection_encrypted_response_enc">OPTIONAL.
          <xref target="RFC7516">JWE</xref> algorithm (<spanx style="verb">enc</spanx> value) 
          as defined in <xref target="RFC7518">JWA</xref> for authenticated encryption of introspection responses. The default, if omitted, is <spanx style="verb">A128CBC-HS256</spanx>.
          Note: This parameter MUST NOT be specified without setting 
          <spanx style="verb">introspection_encrypted_response_alg</spanx>.</t>
        </list>
      </t>
     <t>Resource servers may register their public encryption keys 
      using the <spanx style="verb">jwks_uri</spanx> or <spanx style="verb">jwks</spanx> 
      metadata parameters.</t>
    </section>    
    
    <section anchor="server_metadata" title="Authorization Server Metadata">
      <t>Authorization servers SHOULD publish the supported algorithms for
      signing and encrypting the JWT of an introspection response by utilizing
      <xref target="RFC8414">OAuth 2.0 Authorization Server Metadata</xref>
      parameters.</t>
     <t>The following parameters are introduced by this specification: 
		<list hangIndent="8" style="hanging">
				
		<t hangText="introspection_signing_alg_values_supported">
		OPTIONAL. JSON array containing a list of the <xref target="RFC7515">JWS</xref> signing 
		algorithms (<spanx style="verb">alg</spanx> values) as defined in 
		<xref target="RFC7518">JWA</xref> supported by the introspection
		endpoint to sign the response.</t>

		<t hangText="introspection_encryption_alg_values_supported">
		OPTIONAL. JSON array containing a list of the <xref target="RFC7516">JWE</xref> 
		encryption algorithms (<spanx style="verb">alg</spanx> values) as defined in
		<xref target="RFC7518">JWA</xref> supported by the 
		introspection endpoint to encrypt the response.</t>

		<t hangText="introspection_encryption_enc_values_supported">
		OPTIONAL. JSON array containing a list of the <xref target="RFC7516">JWE</xref> encryption 
		algorithms (<spanx style="verb">enc</spanx> values) as defined in
		<xref target="RFC7518">JWA</xref> supported by the introspection
		endpoint to encrypt the response.</t>

        </list>
      </t>
    </section>
    
    <section anchor="Security" title="Security Considerations">
     <section anchor="Cross-JWT_Confusion" title="Cross-JWT Confusion">
      <t>JWT introspection responses and OpenID Connect ID Tokens are 
      syntactically similar. An attacker could therefore attempt to impersonate
      an end-user at a OpenID Connect relying party by passing the JWT as an ID
      token.</t>
      
      <t>Any RP processing the <spanx style="verb">typ</spanx> JWT header 
      element should detect the attack since token introspection responses
      in JWT format set this header to the value "token-introspection+jwt". 
      Unfortunately, this is not a well established practice yet.</t>
      
      <t>As an alternative approach, such an attack can be prevented like 
      any other token substitution attack by restricting the audience of the JWT.
      The authorization server MUST include the claims
      <spanx style="verb">iss</spanx> and <spanx style="verb">aud</spanx> in
      each JWT introspection response, with the <spanx style="verb">iss</spanx> 
      value set to the authorization server's issuer URL and the 
      <spanx style="verb">aud</spanx> value set
      to the resource server's identifier. This allows a correctly implemented
      OpenID Connect relying party to detect substitution by checking the
      <spanx style="verb">iss</spanx> and
      <spanx style="verb">aud</spanx> claims as described in Section 3.1.3.7. of 
      <xref target="OpenID.Core"/>. Relying parties SHOULD also use and check
      the <spanx style="verb">nonce</spanx> parameter and claim to prevent
      token and code replay.</t>
      
      <t>Resource servers utilizing JWTs to represent self-contained access
      tokens could be susceptible to replay attacks. Resource servers
      should therefore apply proper countermeasures against replay as
      described in <xref target="I-D.ietf-oauth-security-topics"/>, 
      section 2.2.</t>
      <t>JWT Confusion and other attacks involving JWTs are discussed in
      <xref target="I-D.ietf-oauth-jwt-bcp"/>.</t>
           </section>

      <section anchor="token_data_leakage" title="Token Data Leakage">
     <t>The authorization server MUST use Transport Layer Security (TLS) 1.2 
      (or higher) per <xref target="RFC7525"/> in order to prevent token data leakage.</t>
      <t>To prevent introspection of leaked tokens and to present an additional
      security layer against token guessing attacks the authorization server
      may require all requests to the token introspection endpoint to be
      authenticated. As an alternative or as an addition to the authentication,
      the intended recipients may be set up for encrypted responses.</t>
      <t>In the latter case, confidentiality is ensured by the fact that only
      the legitimate recipient is able to decrypt the response.
      An attacker could try to circumvent this measure by requesting a plain 
      JSON response, using an Accept header with the content type set
      to, for example, "application/json" instead of "application/jwt". To prevent this
      attack the authorization server MUST NOT serve requests with a content type
      other than "application/jwt" if the resource server is set up to receive 
      encrypted responses (see also <xref target="jwt_response"/>).</t>
      </section>

      <section anchor="confidential_token_data" title="Keeping Token Data Confidential from OAuth Clients">
      <t>Authorization servers with a policy that requires token data to be
      kept confidential from OAuth clients must require all requests to the
      token introspection endpoint to be authenticated. As an alternative or as
      an addition to the authentication, the intended recipients may be set up
      for encrypted responses.</t>
            </section>

      <section anchor="introspection_activity_audit" title="Logging and Audit of Introspection Activity">
      <t>Authorization servers with a policy that requires token introspection
      activity to be logged and audited must require all requests to the token
      introspection endpoint to be authenticated.</t>
      </section>

    </section>
    
    <section anchor="privacy" title="Privacy Considerations">
     <t>The token introspection response can be used to transfer personal identifiable 
     information from the AS to the RS. The AS MUST ensure a legal basis exists for the
     data transfer before any data is released to a particular RS. The way the legal
     basis is established might vary among jurisdictions and MUST consider
     the legal entities involved.</t>
     <t>For example, the classical way to establish the legal basis is by explicit user
     consent gathered from the resource owner by the AS during the authorization flow.</t>
     <t>It is also possible that the legal basis is established out of band, e.g. in 
     an explicit contract or by the client gathering the resource owner's consent.</t> 
     <t>If the AS and the RS belong to the same legal entity (1st party scenario), there is
     potentially no need for an explicit user consent but the terms of service and policy
     of the respective service provider MUST be enforced at all times.</t>
     <t>In any case, the AS MUST ensure that the scope of the legal basis is enforced
     throughout the whole process. The AS MUST retain the scope of the legal basis with 
     the access token, e.g. in the scope value, and the AS MUST determine the data a 
     resource server is allowed to receive based on the resource server’s identity and 
     suitable token data, e.g. the scope value. </t>
    </section>
    
    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>We would like to thank Petteri Stenius, Neil Madden, Filip Skokan, and Tony 
      Nadalin for their valuable feedback.</t>
    </section>

    <!-- Possibly a 'Contributors' section ... -->

    <section anchor="IANA" title="IANA Considerations">  
      
      <section anchor="DynRegReg" title="OAuth Dynamic Client Registration Metadata Registration">
        <t>
          This specification requests registration of the following client metadata definitions
          in the IANA "OAuth Dynamic Client Registration Metadata" registry
          <xref target="IANA.OAuth.Parameters"/>
          established by <xref target="RFC7591"/>:
        </t>

        <section anchor="DynRegContents" title="Registry Contents">
          <t>
            <list style="symbols">
              <t>
                Client Metadata Name: <spanx style="verb">introspection_signed_response_alg</spanx>
              </t>
              <t>
                Client Metadata Description:
                String value indicating the client's desired introspection response 
                signing algorithm.
              </t>
              <t>
                Change Controller: IESG
              </t>
              <t>
                Specification Document(s): <xref target="client_metadata"/> of [[ this specification ]]
              </t>
            </list>
          </t>
          <t>
            <list style="symbols">
              <t>
                Client Metadata Name: <spanx style="verb">introspection_encrypted_response_alg</spanx>
              </t>
              <t>
                Client Metadata Description:
                String value specifying the desired introspection response 
                encryption algorithm (alg value).
              </t>
              <t>
                Change Controller: IESG
              </t>
              <t>
                Specification Document(s): <xref target="client_metadata"/> of [[ this specification ]]
              </t>
            </list>
          </t>
          <t>
            <list style="symbols">
              <t>
                Client Metadata Name: <spanx style="verb">introspection_encrypted_response_enc</spanx>
              </t>
              <t>
                Client Metadata Description:
                    String value specifying the desired introspection response 
                encryption algorithm (enc value).
              </t>
              <t>
                Change Controller: IESG
              </t>
              <t>
                Specification Document(s): <xref target="client_metadata"/> of [[ this specification ]]
              </t>
            </list>
          </t>

        </section>
      </section>
      
      <section anchor="ietf-oauth-discoveryIANA" title="OAuth Authorization Server Metadata Registration">
      <t>
        This specification requests registration of the following values
        in the IANA "OAuth Authorization Server Metadata" registry
        <xref target="IANA.OAuth.Parameters"/> established by <xref target="RFC8414"/>.
      </t>
        <section title="Registry Contents">
          <t>
            <list style='symbols'>
              <t>Metadata Name: <spanx style="verb">introspection_signing_alg_values_supported</spanx></t>
              <t>Metadata Description: JSON array containing a list of algorithms supported 
              by the authorization server for introspection response signing.</t>
              <t>Change Controller: IESG</t>
              <t>Specification Document(s): <xref target="server_metadata"/> of [[ this specification ]]</t>             
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>Metadata Name: <spanx style="verb">introspection_encryption_alg_values_supported</spanx></t>
              <t>Metadata Description: JSON array containing a list of algorithms supported 
              by the authorization server for introspection response encryption (alg value).</t>
              <t>Change Controller: IESG</t>
              <t>Specification Document(s): <xref target="server_metadata"/> of [[ this specification ]]</t>             
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>Metadata Name: <spanx style="verb">introspection_encryption_enc_values_supported</spanx></t>
              <t>Metadata Description: JSON array containing a list of algorithms supported 
              by the authorization server for introspection response encryption (enc value).</t>
              <t>Change Controller: IESG</t>
              <t>Specification Document(s): <xref target="server_metadata"/> of [[ this specification ]]</t>             
            </list>
          </t>
        </section>
      </section>     
 
      <section anchor="ietf-media-typeIANA" title="Media Type Registration">
      <t>This section registers the "application/token-introspection+jwt" media type
   in the "Media Types" registry <xref target="IANA.MediaTypes"/> in the
   manner described in <xref target="RFC6838"/>, which can be used to indicate that the
   content is a token introspection response in JWT format.</t>
        <section title="Registry Contents">
          <t>
            <list style='symbols'>
              <t>Type name: application</t>
              <t>Subtype name: token-introspection+jwt</t>
   			  <t>Required parameters: N/A</t>
              <t>Optional parameters: N/A</t>
              <t>Encoding considerations: binary; A token introspection response is a JWT; JWT values are
                 encoded as a series of base64url-encoded values (with trailing '='
                 characters removed), some of which may be the empty string,
                 separated by period ('.') characters.</t>
              <t>Security considerations: See Section 7 of this specification</t>
              <t>Interoperability considerations: N/A</t>
              <t>Published specification: Section 4 of this specification</t>
              <t>Applications that use this media type: Applications that produce and consume 
                 OAuth Token Introspection Responses in JWT format</t>
              <t>Fragment identifier considerations: N/A</t>
              <t>Additional information:
                 <list style='symbols'>
                   <t>Magic number(s): N/A</t>
                   <t>File extension(s): N/A</t>
                   <t>Macintosh file type code(s): N/A</t>
                 </list>
              </t>
              <t>Person &amp; email address to contact for further information: Torsten Lodderstedt, 
                 torsten@lodderstedt.net</t>
              <t>Intended usage: COMMON</t>
              <t>Restrictions on usage: none</t>
              <t>Author: Torsten Lodderstedt, torsten@lodderstedt.net</t>
              <t>Change controller: IESG</t>
              <t>Provisional registration?  No</t>              
            </list>
          </t>
        </section>
      </section>  

    </section>
    
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>
      <?rfc include="reference.RFC.3966"?>       
      <?rfc include="reference.RFC.5322"?>
      <?rfc include="reference.RFC.6838"?>      
      <?rfc include="reference.RFC.7519"?>
      <?rfc include="reference.RFC.7525"?>
      <?rfc include="reference.RFC.8259"?>   
      <?rfc include="reference.RFC.7591"?>
      <?rfc include="reference.RFC.7662"?>
      <?rfc include="reference.RFC.7518"?>
      <?rfc include="reference.RFC.7515"?>
      <?rfc include="reference.RFC.7516"?>
      <?rfc include="reference.RFC.8174"?>
      <?rfc include="reference.RFC.8414"?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-oauth-jwt-bcp-06.xml'?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-oauth-security-topics-13.xml'?>
      
       <reference anchor="OpenID.Registration" target="https://openid.net/specs/openid-connect-registration-1_0.html">
        <front>
          <title>OpenID Connect Dynamic Client Registration 1.0 incorporating errata set 1</title>

		  <author fullname="Nat Sakimura">
            <organization>NRI</organization>
          </author>
          <author fullname="John Bradley">
            <organization>Ping Identity</organization>
          </author>
          <author fullname="Mike Jones">
            <organization>Microsoft</organization>
          </author>
          <date day="8" month="Nov" year="2014"/>
        </front>
      </reference>
      
       <reference anchor="OpenID.Core" target="http://openid.net/specs/openid-connect-core-1_0.html">
        <front>
          <title>OpenID Connect Core 1.0 incorporating errata set 1</title>

		  <author fullname="Nat Sakimura">
            <organization>NRI</organization>
          </author>
          <author fullname="John Bradley">
            <organization>Ping Identity</organization>
          </author>
          <author fullname="Mike Jones">
            <organization>Microsoft</organization>
          </author>
          <author fullname="Breno de Medeiros">
            <organization>Google</organization>
          </author>
          <author fullname="Chuck Mortimore">
            <organization>Salesforce</organization>
          </author>
          <date day="8" month="Nov" year="2014"/>
        </front>
      </reference>

<reference anchor="IANA.MediaTypes" target="http://www.iana.org/assignments/media-types">
	<front>
	  <title>Media Types</title>
	  <author fullname="IANA">
	    <organization abbrev="ISO">IANA</organization>
	  </author>
          <date/>
	</front>
</reference>

<reference anchor="ISO3166-1" target="https://www.iso.org/standard/63545.html">
	<front>
	  <title>ISO 3166-1:1997. Codes for the representation of names of
	  countries and their subdivisions -- Part 1: Country codes</title>
	  <author fullname="International Organization for Standardization">
	    <organization abbrev="ISO">International Organization for
	    Standardization</organization>
	  </author>
	  <date year="2013" />
	</front>
</reference>

<reference anchor="ISO639-1" target="https://www.iso.org/standard/22109.html">
	<front>
	  <title>ISO 639-1:2002 Codes for the representation of names of languages 
	  -- part 1: Alpha-2 Code</title>
	  <author fullname="International Organization for Standardization">
	    <organization abbrev="ISO">International Organization for
	    Standardization</organization>
	  </author>
	  <date year="2002" />
	</front>
</reference>

<reference anchor="E.164" target="https://www.itu.int/rec/T-REC-E.164-201011-I/en">
	<front>
	  <title>E.164: The international public telecommunication numbering plan</title>
	  <author fullname="International Organization for Standardization">
	    <organization abbrev="ITU">International Telecommunication Union</organization>
	  </author>
	  <date year="2010" />
	</front>
</reference>

    </references>

    <references title="Informative References">
          <reference anchor="IANA.OAuth.Parameters" target="http://www.iana.org/assignments/oauth-parameters">
        <front>
          <title>OAuth Parameters</title>
          <author>
            <organization>IANA</organization>
          </author>
          <date/>
        </front>
      </reference>
    </references> 
    
    <section anchor="History" title="Document History">
      <t>[[ To be removed from the final specification ]]</t>
      
	  <t>-07<list style="symbols">
          <t>fixed wrong description of "locale"</t>
          <t>added references for ISO and ITU specifications</t>
        </list>
      </t>     
      
	  <t>-06<list style="symbols">
          <t>replaced reference to RFC 7159 with reference to RFC 8259</t>
        </list>
      </t> 
      
	  <t>-05<list style="symbols">
          <t>improved wording for TLS requirement</t>
          <t>added RFC 2119 boilerplate</t>
          <t>fixed and updated some references</t>
        </list>
      </t> 
      
	  <t>-04<list style="symbols">
          <t>reworked definition of parameters in section 4</t>
          <t>added text on data minimization to security considerations section</t>
          <t>added statement regarding TLS to security considerations section</t>
        </list>
      </t> 
      
	  <t>-03<list style="symbols">
          <t>added registration for OpenID Connect Standard Claims to 
          OAuth Token Introspection Response registry</t>
        </list>
      </t> 
	  <t>-02<list style="symbols">
          <t>updated references</t>
        </list>
      </t> 
	  <t>-01<list style="symbols">
          <t>adapted wording to preclude any accept header except "application/jwt" if 
          encrypted responses are required</t>
          <t>use registered alg value RS256 for default signing algorithm</t>
          <t>added text on claims in the token introspection response</t>
        </list>
      </t>        
	  <t>-00<list style="symbols">
          <t>initial version of the WG draft</t>   
          <t>defined default signing algorithm</t>
          <t>changed behavior in case resource server is set up for encryption</t> 
          <t>Added text on token data leakage prevention to the security considerations</t>
          <t>moved Security Considerations section forward</t>
        </list>
      </t>   
      <t>WG draft</t>
      <t>-01<list style="symbols">
      	  <t>fixed typos in client meta data field names</t>
      	  <t>added OAuth Server Metadata parameters to publish algorithms supported 
      	  for signing and encrypting the introspection response</t>
      	  <t>added registration of new parameters for OAuth Server Metadata
      	  and Client Registration</t>
      	  <t>added explicit request for JWT introspection response</t>
      	  <t>made iss and aud claims mandatory in introspection response</t>
      	  <t>Stylistic and clarifying edits, updates references</t>
        </list></t> 
      <t>-00<list style="symbols">
          <t>initial version</t>
        </list></t>  
        
    </section>	
  </back>
</rfc>
